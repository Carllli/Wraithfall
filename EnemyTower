using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class EnemyTower : MonoBehaviour
{
    public GameObject[] enemyPrefabs; // Lancer, Skul, Shelder ������ �迭
    public Transform spawnPoint;     // �� ��ȯ ��ġ
    public float spawnInterval = 5f; // �� ��ȯ ���� (��)

    public int maxHealth = 100; // �� Ÿ���� �ִ� ü��
    private int currentHealth;  // ���� ü��

    private PolygonCollider2D polygonCollider;

    void Start()
    {
        currentHealth = maxHealth; // ü���� �ִ밪���� �ʱ�ȭ
        polygonCollider = GetComponent<PolygonCollider2D>(); // PolygonCollider2D ��������
        StartCoroutine(SpawnEnemies()); // �� ��ȯ ����
    }

    private IEnumerator SpawnEnemies()
    {
        while (currentHealth > 0) // ü���� 0���� Ŭ ���� ��ȯ
        {
            yield return new WaitForSeconds(spawnInterval);

            // ���� �������� ����
            int randomIndex = Random.Range(0, enemyPrefabs.Length);
            GameObject selectedEnemy = enemyPrefabs[randomIndex];

            // ���õ� ���� ��ȯ
            Instantiate(selectedEnemy, spawnPoint.position, Quaternion.identity);
        }
    }

    public void TakeDamage(int damage)
    {
        if (currentHealth <= 0) return; // �̹� �ı��� ��� ���� �ߴ�

        currentHealth -= damage; // �������� ����
        if (currentHealth <= 0)
        {
            currentHealth = 0;
            DestroyTower(); // Ÿ�� �ı�
        }
    }

    private void DestroyTower()
    {
        StartCoroutine(DelayBeforeDestroy());
    }

    private IEnumerator DelayBeforeDestroy()
    {
        // ��� ���� �ൿ ����
        DisableAllEnemies();

        // 0.3�� ���
        yield return new WaitForSeconds(0.3f);

        // Ÿ�� ����
        Destroy(gameObject);

        // �¸� ������ �̵�
        SceneManager.LoadScene("Victory");
    }

    private void DisableAllEnemies()
    {
        // "Enemy" �±װ� �ִ� ��� ���� ã�� �ൿ�� ����
        GameObject[] enemies = GameObject.FindGameObjectsWithTag("Enemy");
        foreach (GameObject enemy in enemies)
        {
            // �̵� ���߱�
            var rigidbody = enemy.GetComponent<Rigidbody2D>();
            if (rigidbody != null)
            {
                rigidbody.linearVelocity = Vector2.zero; // �̵� �ߴ�
                rigidbody.simulated = false;      // ���� ��Ȱ��ȭ
            }

            // �ִϸ��̼� ���߱�
            var animator = enemy.GetComponent<Animator>();
            if (animator != null)
            {
                animator.enabled = false; // �ִϸ��̼� �ߴ�
            }
        }
    }

    void OnTriggerEnter2D(Collider2D collision)
    {
        // �÷��̾�� �浹 ����
        if (collision.CompareTag("Player"))
        {
            // �÷��̾��� ���� ���θ� Ȯ��
            Player player = collision.GetComponent<Player>();
            if (player != null && player.isAttacking) // ���� ���� ���� ������ ����
            {
                TakeDamage(player.attackPower); // �÷��̾� ���ݷ¸�ŭ Ÿ�� ������ ����
            }
        }
    }
}
